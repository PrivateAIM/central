version: '3.9'
services:
    mysql:
        image: mysql:5.7
        container_name: mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
            interval: 3s
            timeout: 5s
            retries: 5
        environment:
            MYSQL_ROOT_HOST: "%"
            MYSQL_ROOT_PASSWORD: start123
        networks:
            hub:
    redis:
        image: bitnami/redis
        healthcheck:
            test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
            interval: 3s
            timeout: 5s
            retries: 5
        environment:
            ALLOW_EMPTY_PASSWORD: yes
        networks:
            hub:
    minio:
        image: minio/minio
        healthcheck:
            test: bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
            interval: 3s
            timeout: 5s
            retries: 5
        ports:
            - '9000:9000'
        environment:
            MINIO_ACCESS_KEY: admin
            MINIO_SECRET_KEY: start123
        command: server /data
        networks:
            hub:
    mq:
        image: rabbitmq
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 3s
            timeout: 5s
            retries: 5
        ports:
            - '5672:5672'
        environment:
            RABBITMQ_DEFAULT_USER: root
            RABBITMQ_DEFAULT_PASS: start123
        networks:
            hub:
    vault:
        image: vault:1.12.0
        healthcheck:
            test: [ "CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8090/v1/sys/health?standbyok=true" ]
            interval: 10s
            timeout: 3s
            retries: 10
            start_period: 5s
        environment:
            VAULT_DEV_ROOT_TOKEN_ID: start123
            VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8090
        networks:
            hub:
    authup:
        image: authup/authup
        pull_policy: always
        restart: always
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
            vault:
                condition: service_healthy
        ports:
            - '3010:3000'
        environment:
            DB_TYPE: 'mysql'
            DB_HOST: 'mysql'
            DB_USERNAME: 'root'
            DB_PASSWORD: 'start123'
            DB_DATABASE: 'auth'
            VAULT: start123@http://vault:8090/v1/
            REDIS: redis://redis
            PUBLIC_URL: http://localhost:3010/
        networks:
            hub:
    core:
        build: '.'
        restart: always
        depends_on:
            authup:
                condition: service_healthy
            mq:
                condition: service_healthy
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
            vault:
                condition: service_healthy
        ports:
            - '3001:3000'
        environment:
            REDIS_CONNECTION_STRING: redis://redis
            VAULT_CONNECTION_STRING: start123@http://vault:8090/v1/
            RABBITMQ_CONNECTION_STRING: amqp://root:start123@172.40.1.1
            PUBLIC_URL: http://localhost:3001/
            AUTHUP_URL: http://authup:3010/
            DB_TYPE: 'mysql'
            DB_HOST: 'mysql'
            DB_USERNAME: 'root'
            DB_PASSWORD: 'start123'
            DB_DATABASE: 'core'
        networks:
            hub:
    realtime:
        build: '.'
        restart: always
        command: realtime start
        depends_on:
            authup:
                condition: service_healthy
            redis:
                condition: service_healthy
            vault:
                condition: service_healthy
        ports:
            - '3002:3000'
        environment:
            REDIS_CONNECTION_STRING: redis://redis
            VAULT_CONNECTION_STRING: start123@http://vault:8090/v1/
            AUTHUP_URL: http://authup:3010/
        networks:
            hub:
    analysis-manager:
        build: '.'
        restart: always
        command: analysis-manager start
        depends_on:
            authup:
                condition: service_healthy
            mq:
                condition: service_healthy
            vault:
                condition: service_healthy
        ports:
            - '3003:3000'
        environment:
            RABBITMQ_CONNECTION_STRING: amqp://root:start123@172.40.1.1
            VAULT_CONNECTION_STRING: start123@http://vault:8090/v1/
            AUTHUP_URL: http://authup:3010/
            STORAGE_URL: http://storage:3000/
        networks:
            hub:
    storage:
        build: '.'
        restart: always
        command: storage start
        depends_on:
            authup:
                condition: service_healthy
            redis:
                condition: service_healthy
            minio:
                condition: service_healthy
            vault:
                condition: service_healthy
        ports:
            - '3004:3000'
        environment:
            DB_TYPE: 'mysql'
            DB_HOST: 'mysql'
            DB_USERNAME: 'root'
            DB_PASSWORD: 'start123'
            DB_DATABASE: 'storage'
            REDIS_CONNECTION_STRING: redis://redis
            MINIO_CONNECTION_STRING: http://admin:start123@minio:9000
            VAULT_CONNECTION_STRING: start123@http://vault:8090/v1/
            AUTHUP_URL: http://authup:3010/
        networks:
            hub:
networks:
    hub:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: dnpm
        ipam:
            driver: default
            config:
                - subnet: 172.40.1.0/24
